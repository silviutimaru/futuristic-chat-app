{"ast":null,"code":"var _jsxFileName = \"/Users/silviutimaru/futuristic-chat-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\n\n// Change these to your test user IDs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_ID = \"6866a789ed224bc42820cbc9\"; // Example: Email Timaru\nconst OTHER_USER_ID = \"6866a8a0cca934b2567caac1\"; // Example: Silviu Timaru\n\nconst API_BASE = \"http://localhost:3000\";\nconst SOCKET_SERVER_URL = \"http://localhost:3000\";\nfunction App() {\n  _s();\n  const [friends, setFriends] = useState([]);\n  const [pendingInvitations, setPendingInvitations] = useState([]);\n  const [privateRooms, setPrivateRooms] = useState([]);\n  const [inviteId, setInviteId] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomMembers] = useState([USER_ID, OTHER_USER_ID]);\n  const [message, setMessage] = useState(\"\");\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [roomMessages, setRoomMessages] = useState([]);\n  const [senderName, setSenderName] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n  const socketRef = useRef(null);\n\n  // Fetch friends, invitations, and rooms on load\n  useEffect(() => {\n    fetchFriends();\n    fetchRooms();\n    // Get sender name for display\n    getSenderName();\n  }, []);\n\n  // Connect to Socket.IO\n  useEffect(() => {\n    const socket = io(SOCKET_SERVER_URL);\n    socketRef.current = socket;\n\n    // Listen for messages for the selected room\n    socket.on(\"room message\", ({\n      roomId,\n      message,\n      sender\n    }) => {\n      if (roomId === selectedRoom) {\n        setRoomMessages(prev => [...prev, {\n          message,\n          sender\n        }]);\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [selectedRoom]);\n\n  // Join a room and fetch chat history when selectedRoom changes\n  useEffect(() => {\n    const fetchHistory = async () => {\n      if (selectedRoom) {\n        // Join the room via socket\n        if (socketRef.current) {\n          socketRef.current.emit(\"join room\", selectedRoom);\n        }\n        // Fetch chat history from backend\n        try {\n          const res = await axios.get(`${API_BASE}/friends/room/messages/${selectedRoom}`);\n          setRoomMessages(res.data.messages.map(msg => ({\n            message: msg.message,\n            sender: msg.sender,\n            sentAt: msg.sentAt\n          })));\n          setInfo(`Joined room: ${getRoomName(selectedRoom)}`);\n        } catch {\n          setRoomMessages([]);\n          setInfo(\"Error fetching chat history\");\n        }\n      }\n    };\n    fetchHistory();\n    // eslint-disable-next-line\n  }, [selectedRoom]);\n  const getSenderName = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/list/${USER_ID}`);\n      if (res.data && res.data.friends) {\n        const user = res.data.friends.find(f => f._id === USER_ID);\n        setSenderName(user ? `${user.firstName} ${user.lastName}` : \"You\");\n      }\n    } catch {\n      setSenderName(\"You\");\n    }\n  };\n  const getRoomName = roomId => {\n    const room = privateRooms.find(r => r._id === roomId);\n    return room ? room.name : \"\";\n  };\n  const fetchFriends = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/list/${USER_ID}`);\n      setFriends(res.data.friends);\n      setPendingInvitations(res.data.pendingInvitations);\n      setInfo(\"\");\n    } catch (err) {\n      setInfo(\"Error fetching friends\");\n    }\n  };\n  const fetchRooms = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/rooms/${USER_ID}`);\n      setPrivateRooms(res.data.privateRooms);\n      setInfo(\"\");\n    } catch (err) {\n      setInfo(\"Error fetching rooms\");\n    }\n  };\n  const sendInvitation = async () => {\n    if (!inviteId) return;\n    try {\n      await axios.post(`${API_BASE}/friends/invite`, {\n        fromUserId: USER_ID,\n        toUserId: inviteId\n      });\n      setInfo(\"Invitation sent!\");\n      setInviteId(\"\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error sending invitation\");\n    }\n  };\n  const acceptInvitation = async fromUserId => {\n    try {\n      await axios.post(`${API_BASE}/friends/accept`, {\n        userId: USER_ID,\n        fromUserId\n      });\n      setInfo(\"Invitation accepted!\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error accepting invitation\");\n    }\n  };\n\n  // NEW: Remove a friend\n  const removeFriend = async friendId => {\n    try {\n      await axios.post(`${API_BASE}/friends/remove`, {\n        userId: USER_ID,\n        friendId\n      });\n      setInfo(\"Friend removed!\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error removing friend\");\n    }\n  };\n  const createRoom = async () => {\n    if (!roomName || roomMembers.length < 2) {\n      setInfo(\"Room name and at least 2 members required\");\n      return;\n    }\n    try {\n      await axios.post(`${API_BASE}/friends/room`, {\n        name: roomName,\n        memberIds: roomMembers\n      });\n      setInfo(\"Room created!\");\n      setRoomName(\"\");\n      fetchRooms();\n    } catch (err) {\n      setInfo(\"Error creating room\");\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (message.trim() && socketRef.current && selectedRoom) {\n      // Emit to socket for real-time\n      socketRef.current.emit(\"room message\", {\n        roomId: selectedRoom,\n        message,\n        sender: senderName || \"You\"\n      });\n      // Save to backend for history\n      try {\n        await axios.post(`${API_BASE}/friends/room/message`, {\n          roomId: selectedRoom,\n          message,\n          sender: senderName || \"You\"\n        });\n      } catch {\n        // Optionally handle error\n      }\n      setRoomMessages(prev => [...prev, {\n        message,\n        sender: senderName || \"You\"\n      }]);\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: \"40px auto\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Friends & Private Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), info && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"green\",\n        marginBottom: 10\n      },\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: friends.map(f => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [f.firstName, \" \", f.lastName, \" (\", f.email, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 10,\n              color: \"white\",\n              background: \"red\",\n              border: \"none\",\n              borderRadius: 4,\n              padding: \"2px 8px\",\n              cursor: \"pointer\"\n            },\n            onClick: () => removeFriend(f._id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, f._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pending Invitations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pendingInvitations.map(inv => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [inv.firstName, \" \", inv.lastName, \" (\", inv.email, \")\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => acceptInvitation(inv._id),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, inv._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Send Friend Invitation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter user ID to invite\",\n        value: inviteId,\n        onChange: e => setInviteId(e.target.value),\n        style: {\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendInvitation,\n        children: \"Send Invitation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Private Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: privateRooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: room.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), \" (Members:\", \" \", room.members.map(m => `${m.firstName} ${m.lastName}`).join(\", \"), \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 10\n            },\n            onClick: () => setSelectedRoom(room._id),\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, room._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Private Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room name\",\n        value: roomName,\n        onChange: e => setRoomName(e.target.value),\n        style: {\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createRoom,\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"#888\",\n          marginTop: 4\n        },\n        children: \"(Room will include you and the other test user)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), selectedRoom && /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginTop: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chat in: \", getRoomName(selectedRoom)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          borderRadius: 8,\n          padding: 16,\n          minHeight: 200,\n          marginBottom: 16,\n          background: \"#f9f9f9\",\n          overflowY: \"auto\",\n          height: 300\n        },\n        children: roomMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"8px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), \" \", msg.message]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          style: {\n            flex: 1,\n            padding: 8,\n            borderRadius: 4,\n            border: \"1px solid #ccc\",\n            marginRight: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            padding: \"8px 16px\",\n            borderRadius: 4,\n            border: \"none\",\n            background: \"#007bff\",\n            color: \"#fff\",\n            cursor: \"pointer\"\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nu+9vuMi+PFW7QR+17tQyDb9hbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","io","jsxDEV","_jsxDEV","USER_ID","OTHER_USER_ID","API_BASE","SOCKET_SERVER_URL","App","_s","friends","setFriends","pendingInvitations","setPendingInvitations","privateRooms","setPrivateRooms","inviteId","setInviteId","roomName","setRoomName","roomMembers","message","setMessage","selectedRoom","setSelectedRoom","roomMessages","setRoomMessages","senderName","setSenderName","info","setInfo","socketRef","fetchFriends","fetchRooms","getSenderName","socket","current","on","roomId","sender","prev","disconnect","fetchHistory","emit","res","get","data","messages","map","msg","sentAt","getRoomName","user","find","f","_id","firstName","lastName","room","r","name","err","sendInvitation","post","fromUserId","toUserId","acceptInvitation","userId","removeFriend","friendId","createRoom","length","memberIds","handleSendMessage","e","preventDefault","trim","style","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","color","marginBottom","email","marginLeft","background","border","borderRadius","padding","cursor","onClick","inv","type","placeholder","value","onChange","target","marginRight","members","m","join","fontSize","marginTop","minHeight","overflowY","height","idx","onSubmit","display","flex","_c","$RefreshReg$"],"sources":["/Users/silviutimaru/futuristic-chat-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\n\n// Change these to your test user IDs\nconst USER_ID = \"6866a789ed224bc42820cbc9\"; // Example: Email Timaru\nconst OTHER_USER_ID = \"6866a8a0cca934b2567caac1\"; // Example: Silviu Timaru\n\nconst API_BASE = \"http://localhost:3000\";\nconst SOCKET_SERVER_URL = \"http://localhost:3000\";\n\nfunction App() {\n  const [friends, setFriends] = useState([]);\n  const [pendingInvitations, setPendingInvitations] = useState([]);\n  const [privateRooms, setPrivateRooms] = useState([]);\n  const [inviteId, setInviteId] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomMembers] = useState([USER_ID, OTHER_USER_ID]);\n  const [message, setMessage] = useState(\"\");\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [roomMessages, setRoomMessages] = useState([]);\n  const [senderName, setSenderName] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n  const socketRef = useRef(null);\n\n  // Fetch friends, invitations, and rooms on load\n  useEffect(() => {\n    fetchFriends();\n    fetchRooms();\n    // Get sender name for display\n    getSenderName();\n  }, []);\n\n  // Connect to Socket.IO\n  useEffect(() => {\n    const socket = io(SOCKET_SERVER_URL);\n    socketRef.current = socket;\n\n    // Listen for messages for the selected room\n    socket.on(\"room message\", ({ roomId, message, sender }) => {\n      if (roomId === selectedRoom) {\n        setRoomMessages((prev) => [...prev, { message, sender }]);\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [selectedRoom]);\n\n  // Join a room and fetch chat history when selectedRoom changes\nuseEffect(() => {\n  const fetchHistory = async () => {\n    if (selectedRoom) {\n      // Join the room via socket\n      if (socketRef.current) {\n        socketRef.current.emit(\"join room\", selectedRoom);\n      }\n      // Fetch chat history from backend\n      try {\n        const res = await axios.get(`${API_BASE}/friends/room/messages/${selectedRoom}`);\n        setRoomMessages(res.data.messages.map(msg => ({\n          message: msg.message,\n          sender: msg.sender,\n          sentAt: msg.sentAt\n        })));\n        setInfo(`Joined room: ${getRoomName(selectedRoom)}`);\n      } catch {\n        setRoomMessages([]);\n        setInfo(\"Error fetching chat history\");\n      }\n    }\n  };\n  fetchHistory();\n  // eslint-disable-next-line\n}, [selectedRoom]);\n\n  const getSenderName = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/list/${USER_ID}`);\n      if (res.data && res.data.friends) {\n        const user = res.data.friends.find((f) => f._id === USER_ID);\n        setSenderName(user ? `${user.firstName} ${user.lastName}` : \"You\");\n      }\n    } catch {\n      setSenderName(\"You\");\n    }\n  };\n\n  const getRoomName = (roomId) => {\n    const room = privateRooms.find((r) => r._id === roomId);\n    return room ? room.name : \"\";\n  };\n\n  const fetchFriends = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/list/${USER_ID}`);\n      setFriends(res.data.friends);\n      setPendingInvitations(res.data.pendingInvitations);\n      setInfo(\"\");\n    } catch (err) {\n      setInfo(\"Error fetching friends\");\n    }\n  };\n\n  const fetchRooms = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/rooms/${USER_ID}`);\n      setPrivateRooms(res.data.privateRooms);\n      setInfo(\"\");\n    } catch (err) {\n      setInfo(\"Error fetching rooms\");\n    }\n  };\n\n  const sendInvitation = async () => {\n    if (!inviteId) return;\n    try {\n      await axios.post(`${API_BASE}/friends/invite`, {\n        fromUserId: USER_ID,\n        toUserId: inviteId,\n      });\n      setInfo(\"Invitation sent!\");\n      setInviteId(\"\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error sending invitation\");\n    }\n  };\n\n  const acceptInvitation = async (fromUserId) => {\n    try {\n      await axios.post(`${API_BASE}/friends/accept`, {\n        userId: USER_ID,\n        fromUserId,\n      });\n      setInfo(\"Invitation accepted!\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error accepting invitation\");\n    }\n  };\n\n  // NEW: Remove a friend\n  const removeFriend = async (friendId) => {\n    try {\n      await axios.post(`${API_BASE}/friends/remove`, {\n        userId: USER_ID,\n        friendId,\n      });\n      setInfo(\"Friend removed!\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error removing friend\");\n    }\n  };\n\n  const createRoom = async () => {\n    if (!roomName || roomMembers.length < 2) {\n      setInfo(\"Room name and at least 2 members required\");\n      return;\n    }\n    try {\n      await axios.post(`${API_BASE}/friends/room`, {\n        name: roomName,\n        memberIds: roomMembers,\n      });\n      setInfo(\"Room created!\");\n      setRoomName(\"\");\n      fetchRooms();\n    } catch (err) {\n      setInfo(\"Error creating room\");\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n  e.preventDefault();\n  if (message.trim() && socketRef.current && selectedRoom) {\n    // Emit to socket for real-time\n    socketRef.current.emit(\"room message\", {\n      roomId: selectedRoom,\n      message,\n      sender: senderName || \"You\",\n    });\n    // Save to backend for history\n    try {\n      await axios.post(`${API_BASE}/friends/room/message`, {\n        roomId: selectedRoom,\n        message,\n        sender: senderName || \"You\",\n      });\n    } catch {\n      // Optionally handle error\n    }\n    setRoomMessages((prev) => [\n      ...prev,\n      { message, sender: senderName || \"You\" }\n    ]);\n    setMessage(\"\");\n  }\n};\n\n  return (\n    <div style={{ maxWidth: 700, margin: \"40px auto\", fontFamily: \"Arial, sans-serif\" }}>\n      <h2>Friends & Private Rooms</h2>\n      {info && <div style={{ color: \"green\", marginBottom: 10 }}>{info}</div>}\n\n      <section style={{ marginBottom: 30 }}>\n        <h3>Your Friends</h3>\n        <ul>\n          {friends.map((f) => (\n            <li key={f._id}>\n              {f.firstName} {f.lastName} ({f.email})\n              <button\n                style={{\n                  marginLeft: 10,\n                  color: \"white\",\n                  background: \"red\",\n                  border: \"none\",\n                  borderRadius: 4,\n                  padding: \"2px 8px\",\n                  cursor: \"pointer\"\n                }}\n                onClick={() => removeFriend(f._id)}\n              >\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section style={{ marginBottom: 30 }}>\n        <h3>Pending Invitations</h3>\n        <ul>\n          {pendingInvitations.map((inv) => (\n            <li key={inv._id}>\n              {inv.firstName} {inv.lastName} ({inv.email}){\" \"}\n              <button onClick={() => acceptInvitation(inv._id)}>Accept</button>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section style={{ marginBottom: 30 }}>\n        <h3>Send Friend Invitation</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Enter user ID to invite\"\n          value={inviteId}\n          onChange={(e) => setInviteId(e.target.value)}\n          style={{ marginRight: 8 }}\n        />\n        <button onClick={sendInvitation}>Send Invitation</button>\n      </section>\n\n      <section style={{ marginBottom: 30 }}>\n        <h3>Your Private Rooms</h3>\n        <ul>\n          {privateRooms.map((room) => (\n            <li key={room._id}>\n              <b>{room.name}</b> (Members:{\" \"}\n              {room.members.map((m) => `${m.firstName} ${m.lastName}`).join(\", \")})\n              <button\n                style={{ marginLeft: 10 }}\n                onClick={() => setSelectedRoom(room._id)}\n              >\n                Chat\n              </button>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <h3>Create Private Room</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Room name\"\n          value={roomName}\n          onChange={(e) => setRoomName(e.target.value)}\n          style={{ marginRight: 8 }}\n        />\n        <button onClick={createRoom}>Create Room</button>\n        <div style={{ fontSize: 12, color: \"#888\", marginTop: 4 }}>\n          (Room will include you and the other test user)\n        </div>\n      </section>\n\n      {selectedRoom && (\n        <section style={{ marginTop: 40 }}>\n          <h3>Chat in: {getRoomName(selectedRoom)}</h3>\n          <div\n            style={{\n              border: \"1px solid #ccc\",\n              borderRadius: 8,\n              padding: 16,\n              minHeight: 200,\n              marginBottom: 16,\n              background: \"#f9f9f9\",\n              overflowY: \"auto\",\n              height: 300,\n            }}\n          >\n            {roomMessages.map((msg, idx) => (\n              <div key={idx} style={{ margin: \"8px 0\" }}>\n                <b>{msg.sender}:</b> {msg.message}\n              </div>\n            ))}\n          </div>\n          <form onSubmit={handleSendMessage} style={{ display: \"flex\" }}>\n            <input\n              type=\"text\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              placeholder=\"Type your message...\"\n              style={{\n                flex: 1,\n                padding: 8,\n                borderRadius: 4,\n                border: \"1px solid #ccc\",\n                marginRight: 8,\n              }}\n            />\n            <button\n              type=\"submit\"\n              style={{\n                padding: \"8px 16px\",\n                borderRadius: 4,\n                border: \"none\",\n                background: \"#007bff\",\n                color: \"#fff\",\n                cursor: \"pointer\",\n              }}\n            >\n              Send\n            </button>\n          </form>\n        </section>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
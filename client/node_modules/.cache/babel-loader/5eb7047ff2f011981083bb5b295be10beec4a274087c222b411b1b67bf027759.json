{"ast":null,"code":"var _jsxFileName = \"/Users/silviutimaru/futuristic-chat-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\n\n// Change these to your test user IDs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_ID = \"6866a789ed224bc42820cbc9\";\nconst OTHER_USER_ID = \"6866a8a0cca934b2567caac1\";\nconst GENERAL_ROOM_ID = \"6866ddcbef2398c4c05d9ed2\"; // <--- Your General Room ID\n\nconst API_BASE = \"http://localhost:3000\";\nconst SOCKET_SERVER_URL = \"http://localhost:3000\";\nconst SUPPORTED_LANGUAGES = [{\n  code: \"en\",\n  name: \"English\"\n}, {\n  code: \"fr\",\n  name: \"French\"\n}, {\n  code: \"de\",\n  name: \"German\"\n}, {\n  code: \"es\",\n  name: \"Spanish\"\n}, {\n  code: \"it\",\n  name: \"Italian\"\n}, {\n  code: \"ro\",\n  name: \"Romanian\"\n}, {\n  code: \"hu\",\n  name: \"Hungarian\"\n}, {\n  code: \"ru\",\n  name: \"Russian\"\n}, {\n  code: \"pl\",\n  name: \"Polish\"\n}, {\n  code: \"tr\",\n  name: \"Turkish\"\n}, {\n  code: \"uk\",\n  name: \"Ukrainian\"\n}, {\n  code: \"pt\",\n  name: \"Portuguese\"\n}, {\n  code: \"bg\",\n  name: \"Bulgarian\"\n}, {\n  code: \"cs\",\n  name: \"Czech\"\n}, {\n  code: \"el\",\n  name: \"Greek\"\n}, {\n  code: \"sv\",\n  name: \"Swedish\"\n}, {\n  code: \"fi\",\n  name: \"Finnish\"\n}, {\n  code: \"da\",\n  name: \"Danish\"\n}, {\n  code: \"nl\",\n  name: \"Dutch\"\n}, {\n  code: \"sk\",\n  name: \"Slovak\"\n}, {\n  code: \"hr\",\n  name: \"Croatian\"\n}, {\n  code: \"sr\",\n  name: \"Serbian\"\n}, {\n  code: \"sl\",\n  name: \"Slovenian\"\n}, {\n  code: \"no\",\n  name: \"Norwegian\"\n}];\nfunction getInitials(name) {\n  if (!name) return \"?\";\n  const parts = name.split(\" \");\n  return parts.map(p => p[0]).join(\"\").toUpperCase();\n}\nfunction formatTime(dateString) {\n  const d = new Date(dateString);\n  return d.toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n}\nfunction App() {\n  _s();\n  const [friends, setFriends] = useState([]);\n  const [pendingInvitations, setPendingInvitations] = useState([]);\n  const [privateRooms, setPrivateRooms] = useState([]);\n  const [inviteId, setInviteId] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomMembers] = useState([USER_ID, OTHER_USER_ID]);\n  const [message, setMessage] = useState(\"\");\n  const [selectedRoom, setSelectedRoom] = useState(GENERAL_ROOM_ID); // Default to General Room\n  const [roomMessages, setRoomMessages] = useState([]);\n  const [senderName, setSenderName] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n  const [notification, setNotification] = useState(\"\");\n  const [userLanguage, setUserLanguage] = useState(\"en\");\n  const socketRef = useRef(null);\n\n  // Fetch friends, invitations, and rooms on load\n  useEffect(() => {\n    fetchFriends();\n    fetchRooms();\n    getSenderName();\n    fetchUserLanguage();\n  }, []);\n\n  // Connect to Socket.IO\n  useEffect(() => {\n    const socket = io(SOCKET_SERVER_URL);\n    socketRef.current = socket;\n\n    // Listen for messages for any room\n    socket.on(\"room message\", ({\n      roomId,\n      message,\n      sender,\n      sentAt\n    }) => {\n      if (roomId === selectedRoom) {\n        setRoomMessages(prev => [...prev, {\n          message,\n          sender,\n          sentAt\n        }]);\n      } else {\n        setNotification(`New message in another room!`);\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [selectedRoom]);\n\n  // Join a room and fetch chat history when selectedRoom changes\n  useEffect(() => {\n    const fetchHistory = async () => {\n      if (selectedRoom) {\n        if (socketRef.current) {\n          socketRef.current.emit(\"join room\", selectedRoom);\n        }\n        try {\n          const res = await axios.get(`${API_BASE}/friends/room/messages/${selectedRoom}`);\n          setRoomMessages(res.data.messages.map(msg => ({\n            message: msg.message,\n            sender: msg.sender,\n            sentAt: msg.sentAt\n          })));\n          setInfo(`Joined room: ${getRoomName(selectedRoom)}`);\n        } catch {\n          setRoomMessages([]);\n          setInfo(\"Error fetching chat history\");\n        }\n      }\n    };\n    fetchHistory();\n    // eslint-disable-next-line\n  }, [selectedRoom]);\n\n  // Notification for new friend invitations\n  useEffect(() => {\n    if (pendingInvitations.length > 0) {\n      setNotification(\"You have a new friend request!\");\n    }\n  }, [pendingInvitations.length]);\n  const getSenderName = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/list/${USER_ID}`);\n      if (res.data && res.data.friends) {\n        const user = res.data.friends.find(f => f._id === USER_ID);\n        setSenderName(user ? `${user.firstName} ${user.lastName}` : \"You\");\n      }\n    } catch {\n      setSenderName(\"You\");\n    }\n  };\n  const fetchUserLanguage = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/users/${USER_ID}`);\n      if (res.data && res.data.language) {\n        setUserLanguage(res.data.language);\n      }\n    } catch {\n      setUserLanguage(\"en\");\n    }\n  };\n  const updateLanguage = async lang => {\n    setUserLanguage(lang);\n    try {\n      await axios.post(`${API_BASE}/users/update-language`, {\n        userId: USER_ID,\n        language: lang\n      });\n      setInfo(\"Language updated!\");\n    } catch {\n      setInfo(\"Error updating language\");\n    }\n  };\n  const getRoomName = roomId => {\n    if (roomId === GENERAL_ROOM_ID) return \"General Room\";\n    const room = privateRooms.find(r => r._id === roomId);\n    return room ? room.name : \"\";\n  };\n  const fetchFriends = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/list/${USER_ID}`);\n      setFriends(res.data.friends);\n      setPendingInvitations(res.data.pendingInvitations);\n      setInfo(\"\");\n    } catch (err) {\n      setInfo(\"Error fetching friends\");\n    }\n  };\n  const fetchRooms = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/rooms/${USER_ID}`);\n      setPrivateRooms(res.data.privateRooms);\n      setInfo(\"\");\n    } catch (err) {\n      setInfo(\"Error fetching rooms\");\n    }\n  };\n  const sendInvitation = async () => {\n    if (!inviteId) return;\n    try {\n      await axios.post(`${API_BASE}/friends/invite`, {\n        fromUserId: USER_ID,\n        toUserId: inviteId\n      });\n      setInfo(\"Invitation sent!\");\n      setInviteId(\"\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error sending invitation\");\n    }\n  };\n  const acceptInvitation = async fromUserId => {\n    try {\n      await axios.post(`${API_BASE}/friends/accept`, {\n        userId: USER_ID,\n        fromUserId\n      });\n      setInfo(\"Invitation accepted!\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error accepting invitation\");\n    }\n  };\n  const removeFriend = async friendId => {\n    try {\n      await axios.post(`${API_BASE}/friends/remove`, {\n        userId: USER_ID,\n        friendId\n      });\n      setInfo(\"Friend removed!\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error removing friend\");\n    }\n  };\n  const createRoom = async () => {\n    if (!roomName || roomMembers.length < 2) {\n      setInfo(\"Room name and at least 2 members required\");\n      return;\n    }\n    try {\n      await axios.post(`${API_BASE}/friends/room`, {\n        name: roomName,\n        memberIds: roomMembers\n      });\n      setInfo(\"Room created!\");\n      setRoomName(\"\");\n      fetchRooms();\n    } catch (err) {\n      setInfo(\"Error creating room\");\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (message.trim() && socketRef.current && selectedRoom) {\n      const sentAt = new Date().toISOString();\n      socketRef.current.emit(\"room message\", {\n        roomId: selectedRoom,\n        message,\n        sender: senderName || \"You\",\n        sentAt\n      });\n      try {\n        await axios.post(`${API_BASE}/friends/room/message`, {\n          roomId: selectedRoom,\n          message,\n          sender: senderName || \"You\",\n          sentAt\n        });\n      } catch {}\n      setRoomMessages(prev => [...prev, {\n        message,\n        sender: senderName || \"You\",\n        sentAt\n      }]);\n      setMessage(\"\");\n    }\n  };\n  const clearNotification = () => setNotification(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: \"40px auto\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#fffae6\",\n        color: \"#856404\",\n        padding: \"10px 20px\",\n        borderRadius: 8,\n        marginBottom: 20,\n        border: \"1px solid #ffeeba\",\n        fontWeight: \"bold\",\n        cursor: \"pointer\"\n      },\n      onClick: clearNotification,\n      children: [notification, \" (click to dismiss)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Friends & Private Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Your Language: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: userLanguage,\n          onChange: e => updateLanguage(e.target.value),\n          style: {\n            marginLeft: 8,\n            padding: 4,\n            borderRadius: 4\n          },\n          children: SUPPORTED_LANGUAGES.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang.code,\n            children: lang.name\n          }, lang.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), info && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"green\",\n        marginBottom: 10\n      },\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: friends.map(f => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"inline-block\",\n              width: 28,\n              height: 28,\n              borderRadius: \"50%\",\n              background: \"#007bff\",\n              color: \"#fff\",\n              textAlign: \"center\",\n              lineHeight: \"28px\",\n              marginRight: 8,\n              fontWeight: \"bold\"\n            },\n            children: getInitials(`${f.firstName} ${f.lastName}`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), f.firstName, \" \", f.lastName, \" (\", f.email, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 10,\n              color: \"white\",\n              background: \"red\",\n              border: \"none\",\n              borderRadius: 4,\n              padding: \"2px 8px\",\n              cursor: \"pointer\"\n            },\n            onClick: () => removeFriend(f._id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, f._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pending Invitations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pendingInvitations.map(inv => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"inline-block\",\n              width: 28,\n              height: 28,\n              borderRadius: \"50%\",\n              background: \"#6c757d\",\n              color: \"#fff\",\n              textAlign: \"center\",\n              lineHeight: \"28px\",\n              marginRight: 8,\n              fontWeight: \"bold\"\n            },\n            children: getInitials(`${inv.firstName} ${inv.lastName}`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), inv.firstName, \" \", inv.lastName, \" (\", inv.email, \")\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => acceptInvitation(inv._id),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, inv._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Send Friend Invitation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter user ID to invite\",\n        value: inviteId,\n        onChange: e => setInviteId(e.target.value),\n        style: {\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendInvitation,\n        children: \"Send Invitation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"General Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 10\n            },\n            onClick: () => setSelectedRoom(GENERAL_ROOM_ID),\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), privateRooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: room.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), \" (Members:\", \" \", room.members.map(m => `${m.firstName} ${m.lastName}`).join(\", \"), \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 10\n            },\n            onClick: () => setSelectedRoom(room._id),\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)]\n        }, room._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Private Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room name\",\n        value: roomName,\n        onChange: e => setRoomName(e.target.value),\n        style: {\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createRoom,\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"#888\",\n          marginTop: 4\n        },\n        children: \"(Room will include you and the other test user)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), selectedRoom && /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginTop: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chat in: \", getRoomName(selectedRoom)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          borderRadius: 8,\n          padding: 16,\n          minHeight: 200,\n          marginBottom: 16,\n          background: \"#f9f9f9\",\n          overflowY: \"auto\",\n          height: 300\n        },\n        children: roomMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"8px 0\",\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"inline-block\",\n              width: 28,\n              height: 28,\n              borderRadius: \"50%\",\n              background: \"#17a2b8\",\n              color: \"#fff\",\n              textAlign: \"center\",\n              lineHeight: \"28px\",\n              marginRight: 8,\n              fontWeight: \"bold\"\n            },\n            children: getInitials(msg.sender)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: 6\n            },\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"auto\",\n              fontSize: 12,\n              color: \"#888\"\n            },\n            children: msg.sentAt ? formatTime(msg.sentAt) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          style: {\n            flex: 1,\n            padding: 8,\n            borderRadius: 4,\n            border: \"1px solid #ccc\",\n            marginRight: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            padding: \"8px 16px\",\n            borderRadius: 4,\n            border: \"none\",\n            background: \"#007bff\",\n            color: \"#fff\",\n            cursor: \"pointer\"\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"e76KHzTRXxQ2PZ926D5+mS0tsgg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","io","jsxDEV","_jsxDEV","USER_ID","OTHER_USER_ID","GENERAL_ROOM_ID","API_BASE","SOCKET_SERVER_URL","SUPPORTED_LANGUAGES","code","name","getInitials","parts","split","map","p","join","toUpperCase","formatTime","dateString","d","Date","toLocaleTimeString","hour","minute","App","_s","friends","setFriends","pendingInvitations","setPendingInvitations","privateRooms","setPrivateRooms","inviteId","setInviteId","roomName","setRoomName","roomMembers","message","setMessage","selectedRoom","setSelectedRoom","roomMessages","setRoomMessages","senderName","setSenderName","info","setInfo","notification","setNotification","userLanguage","setUserLanguage","socketRef","fetchFriends","fetchRooms","getSenderName","fetchUserLanguage","socket","current","on","roomId","sender","sentAt","prev","disconnect","fetchHistory","emit","res","get","data","messages","msg","getRoomName","length","user","find","f","_id","firstName","lastName","language","updateLanguage","lang","post","userId","room","r","err","sendInvitation","fromUserId","toUserId","acceptInvitation","removeFriend","friendId","createRoom","memberIds","handleSendMessage","e","preventDefault","trim","toISOString","clearNotification","style","maxWidth","margin","fontFamily","children","background","color","padding","borderRadius","marginBottom","border","fontWeight","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","marginLeft","display","width","height","textAlign","lineHeight","marginRight","email","inv","type","placeholder","members","m","fontSize","marginTop","minHeight","overflowY","idx","alignItems","onSubmit","flex","_c","$RefreshReg$"],"sources":["/Users/silviutimaru/futuristic-chat-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\n\n// Change these to your test user IDs\nconst USER_ID = \"6866a789ed224bc42820cbc9\";\nconst OTHER_USER_ID = \"6866a8a0cca934b2567caac1\";\nconst GENERAL_ROOM_ID = \"6866ddcbef2398c4c05d9ed2\"; // <--- Your General Room ID\n\nconst API_BASE = \"http://localhost:3000\";\nconst SOCKET_SERVER_URL = \"http://localhost:3000\";\n\nconst SUPPORTED_LANGUAGES = [\n  { code: \"en\", name: \"English\" },\n  { code: \"fr\", name: \"French\" },\n  { code: \"de\", name: \"German\" },\n  { code: \"es\", name: \"Spanish\" },\n  { code: \"it\", name: \"Italian\" },\n  { code: \"ro\", name: \"Romanian\" },\n  { code: \"hu\", name: \"Hungarian\" },\n  { code: \"ru\", name: \"Russian\" },\n  { code: \"pl\", name: \"Polish\" },\n  { code: \"tr\", name: \"Turkish\" },\n  { code: \"uk\", name: \"Ukrainian\" },\n  { code: \"pt\", name: \"Portuguese\" },\n  { code: \"bg\", name: \"Bulgarian\" },\n  { code: \"cs\", name: \"Czech\" },\n  { code: \"el\", name: \"Greek\" },\n  { code: \"sv\", name: \"Swedish\" },\n  { code: \"fi\", name: \"Finnish\" },\n  { code: \"da\", name: \"Danish\" },\n  { code: \"nl\", name: \"Dutch\" },\n  { code: \"sk\", name: \"Slovak\" },\n  { code: \"hr\", name: \"Croatian\" },\n  { code: \"sr\", name: \"Serbian\" },\n  { code: \"sl\", name: \"Slovenian\" },\n  { code: \"no\", name: \"Norwegian\" }\n];\n\nfunction getInitials(name) {\n  if (!name) return \"?\";\n  const parts = name.split(\" \");\n  return parts.map((p) => p[0]).join(\"\").toUpperCase();\n}\n\nfunction formatTime(dateString) {\n  const d = new Date(dateString);\n  return d.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\n}\n\nfunction App() {\n  const [friends, setFriends] = useState([]);\n  const [pendingInvitations, setPendingInvitations] = useState([]);\n  const [privateRooms, setPrivateRooms] = useState([]);\n  const [inviteId, setInviteId] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomMembers] = useState([USER_ID, OTHER_USER_ID]);\n  const [message, setMessage] = useState(\"\");\n  const [selectedRoom, setSelectedRoom] = useState(GENERAL_ROOM_ID); // Default to General Room\n  const [roomMessages, setRoomMessages] = useState([]);\n  const [senderName, setSenderName] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n  const [notification, setNotification] = useState(\"\");\n  const [userLanguage, setUserLanguage] = useState(\"en\");\n  const socketRef = useRef(null);\n\n  // Fetch friends, invitations, and rooms on load\n  useEffect(() => {\n    fetchFriends();\n    fetchRooms();\n    getSenderName();\n    fetchUserLanguage();\n  }, []);\n\n  // Connect to Socket.IO\n  useEffect(() => {\n    const socket = io(SOCKET_SERVER_URL);\n    socketRef.current = socket;\n\n    // Listen for messages for any room\n    socket.on(\"room message\", ({ roomId, message, sender, sentAt }) => {\n      if (roomId === selectedRoom) {\n        setRoomMessages((prev) => [...prev, { message, sender, sentAt }]);\n      } else {\n        setNotification(`New message in another room!`);\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [selectedRoom]);\n\n  // Join a room and fetch chat history when selectedRoom changes\n  useEffect(() => {\n    const fetchHistory = async () => {\n      if (selectedRoom) {\n        if (socketRef.current) {\n          socketRef.current.emit(\"join room\", selectedRoom);\n        }\n        try {\n          const res = await axios.get(`${API_BASE}/friends/room/messages/${selectedRoom}`);\n          setRoomMessages(\n            res.data.messages.map((msg) => ({\n              message: msg.message,\n              sender: msg.sender,\n              sentAt: msg.sentAt,\n            }))\n          );\n          setInfo(`Joined room: ${getRoomName(selectedRoom)}`);\n        } catch {\n          setRoomMessages([]);\n          setInfo(\"Error fetching chat history\");\n        }\n      }\n    };\n    fetchHistory();\n    // eslint-disable-next-line\n  }, [selectedRoom]);\n\n  // Notification for new friend invitations\n  useEffect(() => {\n    if (pendingInvitations.length > 0) {\n      setNotification(\"You have a new friend request!\");\n    }\n  }, [pendingInvitations.length]);\n\n  const getSenderName = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/list/${USER_ID}`);\n      if (res.data && res.data.friends) {\n        const user = res.data.friends.find((f) => f._id === USER_ID);\n        setSenderName(user ? `${user.firstName} ${user.lastName}` : \"You\");\n      }\n    } catch {\n      setSenderName(\"You\");\n    }\n  };\n\n  const fetchUserLanguage = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/users/${USER_ID}`);\n      if (res.data && res.data.language) {\n        setUserLanguage(res.data.language);\n      }\n    } catch {\n      setUserLanguage(\"en\");\n    }\n  };\n\n  const updateLanguage = async (lang) => {\n    setUserLanguage(lang);\n    try {\n      await axios.post(`${API_BASE}/users/update-language`, {\n        userId: USER_ID,\n        language: lang,\n      });\n      setInfo(\"Language updated!\");\n    } catch {\n      setInfo(\"Error updating language\");\n    }\n  };\n\n  const getRoomName = (roomId) => {\n    if (roomId === GENERAL_ROOM_ID) return \"General Room\";\n    const room = privateRooms.find((r) => r._id === roomId);\n    return room ? room.name : \"\";\n  };\n\n  const fetchFriends = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/list/${USER_ID}`);\n      setFriends(res.data.friends);\n      setPendingInvitations(res.data.pendingInvitations);\n      setInfo(\"\");\n    } catch (err) {\n      setInfo(\"Error fetching friends\");\n    }\n  };\n\n  const fetchRooms = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/friends/rooms/${USER_ID}`);\n      setPrivateRooms(res.data.privateRooms);\n      setInfo(\"\");\n    } catch (err) {\n      setInfo(\"Error fetching rooms\");\n    }\n  };\n\n  const sendInvitation = async () => {\n    if (!inviteId) return;\n    try {\n      await axios.post(`${API_BASE}/friends/invite`, {\n        fromUserId: USER_ID,\n        toUserId: inviteId,\n      });\n      setInfo(\"Invitation sent!\");\n      setInviteId(\"\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error sending invitation\");\n    }\n  };\n\n  const acceptInvitation = async (fromUserId) => {\n    try {\n      await axios.post(`${API_BASE}/friends/accept`, {\n        userId: USER_ID,\n        fromUserId,\n      });\n      setInfo(\"Invitation accepted!\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error accepting invitation\");\n    }\n  };\n\n  const removeFriend = async (friendId) => {\n    try {\n      await axios.post(`${API_BASE}/friends/remove`, {\n        userId: USER_ID,\n        friendId,\n      });\n      setInfo(\"Friend removed!\");\n      fetchFriends();\n    } catch (err) {\n      setInfo(\"Error removing friend\");\n    }\n  };\n\n  const createRoom = async () => {\n    if (!roomName || roomMembers.length < 2) {\n      setInfo(\"Room name and at least 2 members required\");\n      return;\n    }\n    try {\n      await axios.post(`${API_BASE}/friends/room`, {\n        name: roomName,\n        memberIds: roomMembers,\n      });\n      setInfo(\"Room created!\");\n      setRoomName(\"\");\n      fetchRooms();\n    } catch (err) {\n      setInfo(\"Error creating room\");\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (message.trim() && socketRef.current && selectedRoom) {\n      const sentAt = new Date().toISOString();\n      socketRef.current.emit(\"room message\", {\n        roomId: selectedRoom,\n        message,\n        sender: senderName || \"You\",\n        sentAt,\n      });\n      try {\n        await axios.post(`${API_BASE}/friends/room/message`, {\n          roomId: selectedRoom,\n          message,\n          sender: senderName || \"You\",\n          sentAt,\n        });\n      } catch {}\n      setRoomMessages((prev) => [\n        ...prev,\n        { message, sender: senderName || \"You\", sentAt },\n      ]);\n      setMessage(\"\");\n    }\n  };\n\n  const clearNotification = () => setNotification(\"\");\n\n  return (\n    <div style={{ maxWidth: 700, margin: \"40px auto\", fontFamily: \"Arial, sans-serif\" }}>\n      {/* Notification Bar */}\n      {notification && (\n        <div\n          style={{\n            background: \"#fffae6\",\n            color: \"#856404\",\n            padding: \"10px 20px\",\n            borderRadius: 8,\n            marginBottom: 20,\n            border: \"1px solid #ffeeba\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n          }}\n          onClick={clearNotification}\n        >\n          {notification} (click to dismiss)\n        </div>\n      )}\n\n      <h2>Friends & Private Rooms</h2>\n\n      {/* Language Selector */}\n      <div style={{ marginBottom: 20 }}>\n        <label>\n          <b>Your Language: </b>\n          <select\n            value={userLanguage}\n            onChange={(e) => updateLanguage(e.target.value)}\n            style={{ marginLeft: 8, padding: 4, borderRadius: 4 }}\n          >\n            {SUPPORTED_LANGUAGES.map((lang) => (\n              <option key={lang.code} value={lang.code}>\n                {lang.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n\n      {info && <div style={{ color: \"green\", marginBottom: 10 }}>{info}</div>}\n\n      <section style={{ marginBottom: 30 }}>\n        <h3>Your Friends</h3>\n        <ul>\n          {friends.map((f) => (\n            <li key={f._id}>\n              <span\n                style={{\n                  display: \"inline-block\",\n                  width: 28,\n                  height: 28,\n                  borderRadius: \"50%\",\n                  background: \"#007bff\",\n                  color: \"#fff\",\n                  textAlign: \"center\",\n                  lineHeight: \"28px\",\n                  marginRight: 8,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {getInitials(`${f.firstName} ${f.lastName}`)}\n              </span>\n              {f.firstName} {f.lastName} ({f.email})\n              <button\n                style={{\n                  marginLeft: 10,\n                  color: \"white\",\n                  background: \"red\",\n                  border: \"none\",\n                  borderRadius: 4,\n                  padding: \"2px 8px\",\n                  cursor: \"pointer\",\n                }}\n                onClick={() => removeFriend(f._id)}\n              >\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section style={{ marginBottom: 30 }}>\n        <h3>Pending Invitations</h3>\n        <ul>\n          {pendingInvitations.map((inv) => (\n            <li key={inv._id}>\n              <span\n                style={{\n                  display: \"inline-block\",\n                  width: 28,\n                  height: 28,\n                  borderRadius: \"50%\",\n                  background: \"#6c757d\",\n                  color: \"#fff\",\n                  textAlign: \"center\",\n                  lineHeight: \"28px\",\n                  marginRight: 8,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {getInitials(`${inv.firstName} ${inv.lastName}`)}\n              </span>\n              {inv.firstName} {inv.lastName} ({inv.email}){\" \"}\n              <button onClick={() => acceptInvitation(inv._id)}>Accept</button>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section style={{ marginBottom: 30 }}>\n        <h3>Send Friend Invitation</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Enter user ID to invite\"\n          value={inviteId}\n          onChange={(e) => setInviteId(e.target.value)}\n          style={{ marginRight: 8 }}\n        />\n        <button onClick={sendInvitation}>Send Invitation</button>\n      </section>\n\n      <section style={{ marginBottom: 30 }}>\n        <h3>Chat Rooms</h3>\n        <ul>\n          <li>\n            <b>General Room</b>\n            <button\n              style={{ marginLeft: 10 }}\n              onClick={() => setSelectedRoom(GENERAL_ROOM_ID)}\n            >\n              Chat\n            </button>\n          </li>\n          {privateRooms.map((room) => (\n            <li key={room._id}>\n              <b>{room.name}</b> (Members:{\" \"}\n              {room.members.map((m) => `${m.firstName} ${m.lastName}`).join(\", \")})\n              <button\n                style={{ marginLeft: 10 }}\n                onClick={() => setSelectedRoom(room._id)}\n              >\n                Chat\n              </button>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <h3>Create Private Room</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Room name\"\n          value={roomName}\n          onChange={(e) => setRoomName(e.target.value)}\n          style={{ marginRight: 8 }}\n        />\n        <button onClick={createRoom}>Create Room</button>\n        <div style={{ fontSize: 12, color: \"#888\", marginTop: 4 }}>\n          (Room will include you and the other test user)\n        </div>\n      </section>\n\n      {selectedRoom && (\n        <section style={{ marginTop: 40 }}>\n          <h3>Chat in: {getRoomName(selectedRoom)}</h3>\n          <div\n            style={{\n              border: \"1px solid #ccc\",\n              borderRadius: 8,\n              padding: 16,\n              minHeight: 200,\n              marginBottom: 16,\n              background: \"#f9f9f9\",\n              overflowY: \"auto\",\n              height: 300,\n            }}\n          >\n            {roomMessages.map((msg, idx) => (\n              <div key={idx} style={{ margin: \"8px 0\", display: \"flex\", alignItems: \"center\" }}>\n                <span\n                  style={{\n                    display: \"inline-block\",\n                    width: 28,\n                    height: 28,\n                    borderRadius: \"50%\",\n                    background: \"#17a2b8\",\n                    color: \"#fff\",\n                    textAlign: \"center\",\n                    lineHeight: \"28px\",\n                    marginRight: 8,\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {getInitials(msg.sender)}\n                </span>\n                <b>{msg.sender}:</b>\n                <span style={{ marginLeft: 6 }}>{msg.message}</span>\n                <span style={{ marginLeft: \"auto\", fontSize: 12, color: \"#888\" }}>\n                  {msg.sentAt ? formatTime(msg.sentAt) : \"\"}\n                </span>\n              </div>\n            ))}\n          </div>\n          <form onSubmit={handleSendMessage} style={{ display: \"flex\" }}>\n            <input\n              type=\"text\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              placeholder=\"Type your message...\"\n              style={{\n                flex: 1,\n                padding: 8,\n                borderRadius: 4,\n                border: \"1px solid #ccc\",\n                marginRight: 8,\n              }}\n            />\n            <button\n              type=\"submit\"\n              style={{\n                padding: \"8px 16px\",\n                borderRadius: 4,\n                border: \"none\",\n                background: \"#007bff\",\n                color: \"#fff\",\n                cursor: \"pointer\",\n              }}\n            >\n              Send\n            </button>\n          </form>\n        </section>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}